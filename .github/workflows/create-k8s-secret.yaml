name: Create Kubernetes Secret from GitHub Secrets

on:
  workflow_dispatch:
    inputs:
      namespace:
        description: "Kubernetes namespace to create the secret in"
        required: true
        default: "prod"

jobs:
  create-secret:
    runs-on: ubuntu-latest

    env:
      SECRET_KEYS: |
        AWS_ACCESS_KEY
        AWS_SECRET_KEY

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure AWS for EKS
        run: |
          aws eks update-kubeconfig --region us-east-2 --name qrify-eks
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

      - name: Export secrets to env
        run: |
          echo "Exporting secrets to env..."
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

      - name: Create Kubernetes Secret
        run: |
          echo "Building kubectl command..."
          CMD="kubectl create secret generic qrify-secrets -n ${{ github.event.inputs.namespace }}"

          while read -r SECRET_KEY; do
            VALUE=$(printenv "$SECRET_KEY")
            if [ -z "$VALUE" ]; then
              echo "⚠️  Warning: Secret $SECRET_KEY not available in env"
              continue
            fi
            CMD="$CMD --from-literal=${SECRET_KEY}=${VALUE}"
          done <<< "${SECRET_KEYS}"

          CMD="$CMD --dry-run=client -o yaml | kubectl apply -f -"
          echo "Executing: $CMD"
          eval "$CMD"
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}